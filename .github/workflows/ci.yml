name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the "main" branch
  push:
    branches: [ "main" ]
  # Triggers the workflow on pull request events targeting the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    name: Build, Lint & Test
    runs-on: ubuntu-latest

    # Grant permissions for the GITHUB_TOKEN to write to the gh-pages branch
    permissions:
      contents: write

    steps:
      # 1. Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Node.js and Yarn
      # This action also enables Corepack for Yarn 4 and sets up caching.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      # 3. Install dependencies
      - name: Install Dependencies
        run: yarn install

      # 4. Run all quality checks
      # This single command runs linting, builds the project, and runs tests with coverage.
      - name: Run Lint, Build, and Coverage
        run: yarn build:test

      # 5. Generate the coverage badge SVG from the coverage summary
      - name: Generate coverage badge
        uses: jpb06/coverage-badges-action@latest
        with:
          # The summary file is generated by the `yarn coverage` command
          coverage-summary-path: ./coverage/coverage-summary.json
          # The output path for the SVG badge
          output-path: ./coverage/coverage-badge.svg
          # Optional: Customize the badge label
          label: coverage

      # 6. Deploy the full HTML coverage report and the badge to GitHub Pages
      - name: Deploy Coverage Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          # The GITHUB_TOKEN is automatically provided by GitHub Actions
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # The directory to publish
          publish_dir: ./coverage
          # The branch to publish to (conventional name is gh-pages)
          publish_branch: gh-pages
          # Keep the history of the gh-pages branch
          keep_files: false
